name: build

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号'
        required: true

jobs:
  build-binaries:
    name: "Build binaries"
    runs-on: ${{ matrix.platform.os }}
    timeout-minutes: 12
    strategy:
      fail-fast: true
      matrix:
        platform:
          - {os: "ubuntu-20.04",target: "x86_64-unknown-linux-musl", ext: ""}
          - {os: "windows-2019",target: "x86_64-pc-windows-msvc", ext: ".exe"}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.platform.target }}

      - name: Setup musl-tools (ubuntu)
        if: contains(matrix.platform.os, 'ubuntu')
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools

      - name: Build
        shell: bash
        run: |
          cargo build --release --target ${{ matrix.platform.target }} 

      - name: Output (*nix)
        if: matrix.platform.os != 'windows-2019'
        shell: bash
        run: |
          mkdir -p output
          mv target/${{ matrix.platform.target }}/release/clash-tui output/clash-tui_${{ matrix.platform.target }}-${{ github.event.inputs.version }}${{matrix.platform.ext}}

      - name: Output (windows)
        if: matrix.platform.os == 'windows-2019'
        shell: pwsh
        run: |
          mkdir -p output
          move target\${{ matrix.platform.target }}\release\clash-tui.exe output\clash-tui_${{ matrix.platform.target }}-${{ github.event.inputs.version }}${{matrix.platform.ext}}
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: clash-tui_${{ matrix.platform.target }}${{ github.event.inputs.version }}
          path: output
      

